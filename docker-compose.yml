services:
  go_db:
    image: postgres:17-alpine
    container_name: go_db
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=CDC123
      - POSTGRES_DB=test
    restart: unless-stopped
    volumes:
      - database_bench:/var/lib/postgresql/data
    networks:
      - bench_network

  python_db:
    image: postgres:17-alpine
    container_name: python_db
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=CDC123
      - POSTGRES_DB=test
    restart: unless-stopped
    volumes:
      - database_bench:/var/lib/postgresql/data
    networks:
      - bench_network
      
  go_app:
    build:
      context: ./testGo
      dockerfile: Dockerfile
    container_name: go_app
    restart: unless-stopped
    ports:
      - "8080:8080"
    depends_on:
      - go_db
    environment:
      - DB_HOST=go_db
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASS=CDC123
      - DB_NAME=test
      - DB_DIALECT=postgresql
    networks:
      - bench_network
      
  python_app:
    build:
      context: ./testPython
      dockerfile: Dockerfile
    container_name: python_app
    restart: unless-stopped
    ports:
      - "8088:8000"
    depends_on:
      - python_db
    environment:
      - DB_HOST=python_db
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASS=CDC123
      - DB_NAME=test
      - DB_DIALECT=postgresql
    networks:
      - bench_network

volumes:
  database_bench:

networks:
  bench_network:
    driver: bridge